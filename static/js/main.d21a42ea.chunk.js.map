{"version":3,"sources":["styles/index.js","App.js","serviceWorker.js","index.js"],"names":["createMuiTheme","palette","primary","main","secondary","useStyles","makeStyles","theme","margin","spacing","extendedIcon","marginRight","progressBar","cursor","width","position","height","progressNow","display","left","background","font","color","isFavorite","coverDiv","marginLeft","marginTop","transform","topTools","top","right","playerContainer","flexDirection","justifyContent","alignItems","flex","title","flexGrow","paddingTop","playerBar","tools","padding","songList","item","songs","author","name","length","App","classes","_useState","useState","_useState2","Object","slicedToArray","songIndex","setSongIndex","_useState3","_useState4","setIsFavorite","_useState5","_useState6","isPlay","setIsPlay","_useState7","_useState8","isRandom","setIsRandom","_useState9","_useState10","isMute","setIsMute","_useState11","_useState12","currentTime","setCurrentTime","_useState13","_useState14","leftTime","setLeftTime","_useState15","_useState16","completed","setCompleted","_React$useState","React","_React$useState2","open","setOpen","audioRef","useRef","progressRef","handleClose","clickNext","useCallback","add","Math","floor","random","newIndex","toFixed","moveProgress","event","fullWidth","current","clientWidth","percent","clientX","duration","useEffect","isDrag","onmousemove","onmousedown","onmouseup","onplay","onended","ontimeupdate","nextTime","concat","min","sec","_audioRef$current","old","_audioRef$current2","onpause","_songs$songIndex","react_default","a","createElement","className","style","src","alt","Table","TableHead","TableRow","TableCell","align","TableBody","map","song","index","key","component","scope","Hearing_default","fontSize","ButtonBase","onClick","Typography","variant","IconButton","aria-label","classNames","defineProperty","Favorite_default","Shuffle_default","autoPlay","ref","muted","SkipPrevious_default","Fab","pause","play","Pause_default","PlayArrow_default","SkipNext_default","VolumeOff_default","VolumeUp_default","root","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","Boolean","window","location","hostname","match","ReactDOM","render","ThemeProvider","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d21a42ea.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nexport default createMuiTheme({\n  palette: {\n    primary: {\n      main: '#fafafa',\n    },\n    secondary: {\n      main: `rgb(77, 190, 164)`,\n    }\n  },\n});","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Shuffle from '@material-ui/icons/Shuffle';\nimport Favorite from '@material-ui/icons/Favorite';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Pause from '@material-ui/icons/Pause';\nimport SkipNext from '@material-ui/icons/SkipNext';\nimport SkipPrevious from '@material-ui/icons/SkipPrevious';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport VolumeOff from '@material-ui/icons/VolumeOff';\nimport Hearing from '@material-ui/icons/Hearing';\nimport classNames from 'classnames';\nimport {\n  Button,\n  Typography,\n  ButtonBase,\n  Fab,\n  Table,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n} from '@material-ui/core';\n\nimport './App.css';\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  progressBar: {\n    cursor: 'pointer',\n    width: '100%',\n    position: 'relative',\n    height: 5,\n  },\n  progressNow: {\n    position: 'absolute',\n    display: 'inline-block',\n    height: '100%',\n    left: 0,\n    background: theme.palette.secondary.main,\n  },\n  font: {\n    color: 'white',\n  },\n  isFavorite: {\n    color: 'red',\n  },\n  coverDiv: {\n    display: 'block',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: -48,\n    width: 320,\n    height: 280,\n    transform: 'rotate(0deg, 360deg)',\n  },\n  topTools: {\n    position: 'absolute',\n    top: 32,\n    right: 28,\n  },\n  playerContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n  },\n  title: {\n    flexGrow: 1,\n    paddingTop: 48,\n    marginRight: 32,\n  },\n  playerBar: {\n    display: 'flex',\n    flexDirection: 'row',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n  },\n  tools: {\n    marginLeft: '3.5%',\n    padding: 24,\n  },\n  songList: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n    // background: 'blue',\n  },\n  item: {\n    flex: 1,\n    display: 'flex',\n  },\n}));\n\nconst songs = [\n  { \n    author: 'Author My Way',\n    name: 'For_We_Are_Many',\n    length: '3:53',\n  },\n  { \n    author: 'Author Jazz_Mango',\n    name: 'Jazz_Mango',\n    length: '2:12',\n  },\n  { \n    author: 'Author Song_of_Mirrors',\n    name: 'Song_of_Mirrors',\n    length: '6:13',\n  },\n  { \n    author: 'Author Ice_Cream',\n    name: 'Ice_Cream',\n    length: '2:03',\n  },\n  { \n    author: 'Author Dawn_of_Man',\n    name: 'Dawn_of_Man',\n    length: '2:06',\n  },\n];\n\nfunction App() {\n  let isDrag = false;\n  const classes = useStyles();\n  const [songIndex, setSongIndex] = useState(0);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [isPlay, setIsPlay] = useState(false);\n  const [isRandom, setIsRandom] = useState(false);\n  const [isMute, setIsMute] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [leftTime, setLeftTime] = useState(0);\n  const [completed, setCompleted] = useState(0);\n  const [open, setOpen] = React.useState(true);\n  const audioRef = useRef(null);\n  const progressRef = useRef(null);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  const clickPrevious = () => {\n    const newIndex = (songIndex - 1 + songs.length) % songs.length;\n    setSongIndex(newIndex);\n  }\n  const clickNext = useCallback(() => {\n    let add = 1;\n    if (isRandom) {\n      add = Math.floor(Math.random() * Math.floor(songs.length)) + 1;\n    }\n    const newIndex = (songIndex + add) % songs.length;\n    setSongIndex(newIndex);\n\n    const random = (Math.random()*100).toFixed(0);\n    if (random < 30) handleClickOpen();\n  }, [songIndex, isRandom])\n\n  const onClickIsPlay = () => {\n    if (isPlay) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlay(!isPlay)\n  }\n\n  const moveProgress = (event) => {\n    const fullWidth = progressRef.current.clientWidth;\n    const percent = ((event.clientX - 72)/fullWidth*100).toFixed(2);\n    const { duration } = audioRef.current;\n    audioRef.current.currentTime = duration * percent / 100;\n    setCompleted(percent);\n  }\n\n  useEffect((isDrag) => {\n    progressRef.current.onmousemove = (event) => {\n      if (isDrag) moveProgress(event);\n    }\n    progressRef.current.onmousedown = (event) => {\n      isDrag = true;\n    }\n    progressRef.current.onmouseup = (event) => {\n      isDrag = false;\n    }\n    if (audioRef.current) {\n      audioRef.current.onplay = () => {\n        setIsPlay(true);\n      }\n      audioRef.current.onended = () => {\n        clickNext();\n      }\n      audioRef.current.ontimeupdate = () => {\n        const nextTime = audioRef.current.currentTime.toFixed(0) || null;\n        if (nextTime) {\n          if (nextTime < 60) {\n            if (nextTime < 10) {\n              setCurrentTime(`0:0${nextTime}`);\n            } else {\n              setCurrentTime(`0:${nextTime}`);\n            }\n          } else {\n            const min = (nextTime / 60).toFixed(0);\n            const sec = nextTime % 60;\n            if (sec < 10) {\n              setCurrentTime(`${min}:0${sec}`)\n            } else {\n              setCurrentTime(`${min}:${sec}`)\n            }\n          }\n        }\n        const { duration, currentTime } = audioRef.current;\n        const left = (duration - currentTime).toFixed(0);\n        if (left > 0) {\n          if (left < 60) {\n            if (left < 10) {\n              setLeftTime(`-0:0${left}`);\n            } else {\n              setLeftTime(`-0:${left}`);\n            }\n          } else {\n            const min = (left / 60).toFixed(0);\n            const sec = left % 60;\n            if (sec < 10) {\n              setLeftTime(`-${min}:0${sec}`)\n            } else {\n              setLeftTime(`-${min}:${sec}`)\n            }\n          }\n        } \n\n        setCompleted((old) => {\n          if (old === 100) return 0;\n          if (audioRef.current) {\n            const { currentTime, duration } = audioRef.current;\n            return (currentTime/duration*100).toFixed(2);\n          }\n        });\n      }\n      audioRef.current.onpause = () => {\n        setIsPlay(false);\n      }\n    }\n  }, [clickNext, isDrag])\n  \n  const { name, author } = songs[songIndex];\n  return (\n    <div className=\"App\">\n      <div className=\"Body\">\n        <div className={classes.coverDiv}>\n          <img style={{ width: '100%', height: '100%' }} src={`/cover/${name}.jpg`} alt=\"albumcover\" />\n        </div>\n        <div className={classes.songList}>\n          <Table>\n            <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n              <TableCell align=\"center\">Title</TableCell>\n              <TableCell align=\"right\">LENGTH</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {songs.map((song, index) => {\n            return (\n              <TableRow key={song.name}>\n                <TableCell component=\"th\" scope=\"row\">{index + 1}</TableCell>\n                <TableCell component=\"th\">\n                  {songIndex === index && <Hearing color=\"primary\" fontSize=\"small\" />}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"column\">\n                  <ButtonBase onClick={() => setSongIndex(index)}>\n                    <Typography variant=\"subtitle1\" color=\"primary\">\n                      {song.name}\n                    </Typography>\n                  </ButtonBase>\n                </TableCell>\n                <TableCell align=\"right\">{song.length}</TableCell>\n              </TableRow>\n            )\n          })}\n          </TableBody>\n          </Table>\n        </div>\n        <div className={classes.playerContainer}>\n          <div className={classes.topTools}>\n            <IconButton aria-label=\"favorite\" className={classNames(classes.margin, { [classes.isFavorite]: isFavorite })} onClick={() => setIsFavorite(!isFavorite)}>\n              <Favorite fontSize=\"small\" />\n            </IconButton>\n            <IconButton aria-label=\"shuffle\" className={classNames(classes.margin, { [classes.isRandom]: isRandom })} onClick={() => setIsRandom(!isRandom)}>\n              <Shuffle fontSize=\"small\" color={isRandom ? \"primary\" : \"inherit\"} />\n            </IconButton>\n          </div>\n          <div className={classes.title}>\n            <Typography variant=\"h5\" className={classNames(classes.font, classes.margin)}>{name}</Typography>\n            <Typography variant=\"subtitle1\"className={classNames(classes.font, classes.margin)} >{author}</Typography>\n          </div>\n          \n          <audio\n            autoPlay\n            ref={audioRef}\n            muted={isMute}\n            src={`/music/${name}.mp3`}>\n          </audio>\n          <div className={classes.playerBar}>\n            <Typography variant=\"subtitle1\" color=\"primary\">\n              {currentTime}\n            </Typography>\n            <div className={classes.tools}>\n              <IconButton aria-label=\"skip_previous\" className={classes.margin} onClick={clickPrevious}>\n                <SkipPrevious color=\"primary\" fontSize=\"small\" />\n              </IconButton>\n              <Fab aria-label=\"play\" color=\"secondary\" className={classes.margin} onClick={onClickIsPlay}>\n                {!isPlay ? <PlayArrow color=\"primary\" fontSize=\"large\" /> : <Pause color=\"primary\" fontSize=\"large\"/>}\n              </Fab>\n              <IconButton aria-label=\"skip_next\" className={classes.margin} onClick={clickNext}>\n                <SkipNext color=\"primary\" fontSize=\"small\" />\n              </IconButton>\n              <IconButton aria-label=\"volume\" className={classes.margin} onClick={() => setIsMute(!isMute)}>\n                {!isMute ? <VolumeUp color=\"primary\" fontSize=\"small\" /> : <VolumeOff color=\"primary\" fontSize=\"small\" />}\n              </IconButton>\n            </div>\n            <Typography variant=\"subtitle1\" color=\"primary\">\n              {leftTime}\n            </Typography>\n          </div>\n        </div>\n        <div className={classes.root}>\n          <div className={classes.progressBar} ref={progressRef} onClick={moveProgress}>\n            <div className={classes.progressNow} style={{ width: `${completed}%` }}/>\n          </div>\n        </div>\n      </div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Order Premium service?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Premium Service provide you a better experience.\n            Enjoy and have fun with music player.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"secondary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from './styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nfunction WrapTheme() {\n  return (\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  );\n}\nReactDOM.render(<WrapTheme />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}